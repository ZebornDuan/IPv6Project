{"version":3,"sources":["Home/Barchart.js"],"names":["Barchart","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","bizcharts__WEBPACK_IMPORTED_MODULE_6__","height","width","data","country","percentage","reverse","forceFit","transpose","name","label","offset","type","position","size","Component"],"mappings":"sKAaMA,mLAsDE,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOC,OAAQ,IAAMC,MAAQ,OAASC,KArDzB,CAClB,CACCC,QAAS,UACTC,WAAY,OAEb,CACCD,QAAS,SACPC,WAAY,MAGf,CACCD,QAAS,eACTC,WAAY,OAEb,CACCD,QAAS,aACTC,WAAY,OAEb,CACCD,QAAS,WACTC,WAAY,OAEb,CACGD,QAAS,aACTC,WAAY,MAEf,CACCD,QAAS,SACTC,WAAY,KAEb,CACGD,QAAS,aACTC,WAAY,KAGf,CACCD,QAAS,aACTC,WAAY,MAgByCC,UAAWC,UAAQ,GAC1EV,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOQ,WAAS,IACRX,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACES,KAAK,WACLC,MAAO,CACLC,OAAQ,MAGZd,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMS,KAAK,eACXZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMY,KAAK,WAAWC,SAAS,qBAAqBC,KAAM,cAlE7CC,aAwERnB","file":"static/js/4.338607a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n\tChart,\r\n\tGeom,\r\n\tAxis,\r\n\tTooltip,\r\n\tCoord,\r\n} from \"bizcharts\";\r\n\r\n \r\n/**\r\n * 使用bizCharts完成图表\r\n */\r\nclass Barchart extends Component {\r\n \r\n    render() {\r\n        var data =   [\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Unicast\",\r\n\t\t\t\tpercentage: 99.99\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Global\",\r\n\t\t\t  \tpercentage: 99.40\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Byte-Pattern\",\r\n\t\t\t\tpercentage: 35.95\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Randomized\",\r\n\t\t\t\tpercentage: 32.79\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Low-byte\",\r\n\t\t\t\tpercentage: 16.74\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t  \tcountry: \"Embed-IPv4\",\r\n\t\t\t  \tpercentage: 7.33\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Teredo\",\r\n\t\t\t\tpercentage: 0.55\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t  \tcountry: \"IEEE-based\",\r\n\t\t\t  \tpercentage: 0.45\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\tcountry: \"Embed-port\",\r\n\t\t\t\tpercentage: 0.01\r\n\t\t\t},\r\n\t\t  ];\r\n    \r\n\t\t//   const ds = new DataSet();\r\n\t\t//   const dv = ds.createView().source(data);\r\n\t\t//   dv.source(data).transform({\r\n\t\t// \ttype: \"sort\",\r\n\t  \r\n\t\t// \tcallback(a, b) {\r\n\t\t// \t  // 排序依据，和原生js的排序callback一致\r\n\t\t// \t  return a.percentage - b.percentage >0;\r\n\t\t// \t}\r\n\t\t//   });\r\n        return (\r\n        <div>\r\n        <Chart height={400}  width ={\"100%\"}  data={data.reverse()} forceFit>\r\n\t\t<Coord transpose />\r\n          <Axis\r\n            name=\"IID Type\"\r\n            label={{\r\n              offset: 12\r\n            }}\r\n          />\r\n          <Axis name=\"Percentage\" />\r\n          <Tooltip />\r\n          <Geom type=\"interval\" position=\"country*percentage\" size={18}/>\r\n        </Chart>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Barchart;\r\n"],"sourceRoot":""}